name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS
          - platform: darwin
            arch: arm64
            runs-on: macos-14
            package_type: tar.gz
          # Windows
          - platform: windows
            arch: amd64
            runs-on: windows-latest
            package_type: zip
          # Linux
          - platform: linux
            arch: amd64
            runs-on: ubuntu-24.04
            package_type: tar.gz

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        shell: bash
        run: |
          case "${{ matrix.platform }}" in
            linux)
              sudo apt-get update
              sudo apt-get install -y gcc libc6-dev
              ;;
            windows)
              choco install mingw -y
              ;;
          esac

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build
        shell: bash
        env:
          GOOS: ${{ matrix.platform }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 1
        run: |
          workDir=$(pwd)
          mkdir -p ./build/bin
          OUTPUT="${workDir}/build/bin/qng-${{ matrix.platform }}-${{ matrix.arch }}"
          if [ "${{ matrix.platform }}" == "windows" ]; then
            OUTPUT="$OUTPUT.exe"
          fi
          cd ./cmd/qng
          go build -o $OUTPUT

      - name: Package Artifact
        shell: bash
        run: |
          ARTIFACT="./qng-${{ matrix.platform }}-${{ matrix.arch }}"
          if [ "${{ matrix.platform }}" == "windows" ]; then
            pwsh -Command "Compress-Archive -Path '${ARTIFACT}.exe' -DestinationPath '${ARTIFACT}.zip'"
          else
            tar czf "${ARTIFACT}.tar.gz" "${ARTIFACT}"
          fi


      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: qng-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            ./qng-${{ matrix.platform }}-${{ matrix.arch }}.${{ matrix.package_type }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build/bin

      - name: List downloaded files
        run: ls -R ./build/bin

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./build/bin/**