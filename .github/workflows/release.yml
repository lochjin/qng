name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS
          - platform: darwin
            arch: arm64
            runs-on: macos-14
            package_type: tar.gz
          # Windows
          - platform: windows
            arch: amd64
            runs-on: windows-latest
            package_type: zip
          # Linux
          - platform: linux
            arch: amd64
            runs-on: ubuntu-24.04
            package_type: tar.gz

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies Windows
        shell: bash
        if: ${{ matrix.platform }} == windows
        run: |
          choco install mingw -y
          choco install git -y
          git --version
          choco install make -y
          make --version
          choco install unzip -y
          unzip --version

      - name: Install Dependencies Linux
        shell: bash
        if: ${{ matrix.platform }} == linux
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libc6-dev make
          git --version
          make --version

      - name: Install Dependencies MacOS
        shell: bash
        if: ${{ matrix.platform }} == darwin
        run: |
          git --version
          brew update
          brew install make
          make --version

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build
        shell: bash
        env:
          GOOS: ${{ matrix.platform }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 1
        run: |
          make release

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            ./build/release/*.tar.gz
            ./build/release/*.zip
            ./build/release/*_checksum.txt

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build/release

      - name: List downloaded files
        run: ls -R ./build/release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./build/release/**